@model OnlineShop.ViewModels.DishDataViewModel

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<h1>Create Dish</h1>

@using (Html.BeginForm("Save", "DishManagementSystem", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="form-group">
        <label for="Name">Dish Name:</label>
        @Html.TextBoxFor(model => model.Dish.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Dish.Name, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <label for="Description">Dish Description:</label>
        @Html.TextAreaFor(model => model.Dish.Description, new { @class = "form-control", rows = 4 })
        @Html.ValidationMessageFor(model => model.Dish.Description, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <label for="Photo">Dish Photo:</label>
        <input type="file" name="Photo" id="Photo" class="form-control-file" />
        @Html.ValidationMessageFor(model => model.Dish.Photo, "", new { @class = "text-danger", type = "image" })
    </div>

    <div class="form-group">
        <label for="Price">Dish Price:</label>
        @Html.TextBoxFor(model => model.Dish.Price, new { @class = "form-control", min = 0.01, type = "number", step = "0.01" })
        @Html.ValidationMessageFor(model => model.Dish.Price, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <label for="Currency">Currency:</label>
        @Html.DropDownListFor(model => model.Dish.Currency, new List<SelectListItem>
        {
            new() { Text = "USD", Value = "USD" },
            new() { Text = "EUR", Value = "EUR" },
            new() { Text = "UAH", Value = "UAH" }
        }, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Dish.Currency, "", new { @class = "text-danger" })
    </div>
    
    <div class="form-group">
        <label>Categories:</label>
        <div class="d-flex flex-wrap">
            @foreach (var category in Model.Categories)
            {
                <div class="form-check mr-3">
                    <input class="form-check-input" type="checkbox" 
                           id="@($"Category_{category.Id}")" 
                           name="SelectedCategoryIds" 
                           value="@category.Id" 
                           @(Model.SelectedCategoryIds.Contains(category.Id) ? "checked" : "") />
                    <label class="form-check-label" for="@($"Category_{category.Id}")">
                        @category.Name
                    </label>
                </div>
            }
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Create Dish</button>
}